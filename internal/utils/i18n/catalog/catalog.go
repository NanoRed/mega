// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package main

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en":    &dictionary{index: enIndex, data: enData},
		"zh_CN": &dictionary{index: zh_CNIndex, data: zh_CNData},
	}
	fallback := language.MustParse("zh-CN")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"发生未知错误":      1,
	"女":           6,
	"服务器繁忙，请稍后再试": 7,
	"服务器错误，请重新尝试": 0,
	"未知":          4,
	"男":           5,
	"请求数据有误":      2,
	"验证失败":        3,
}

var enIndex = []uint32{ // 9 elements
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000, 0x00000000, 0x00000000, 0x00000000,
	0x00000000,
} // Size: 60 bytes

const enData string = ""

var zh_CNIndex = []uint32{ // 9 elements
	0x00000000, 0x00000022, 0x00000035, 0x00000048,
	0x00000055, 0x0000005c, 0x00000060, 0x00000064,
	0x00000086,
} // Size: 60 bytes

const zh_CNData string = "" + // Size: 134 bytes
	"\x02服务器错误，请重新尝试\x02发生未知错误\x02请求数据有误\x02验证失败\x02未知\x02男\x02女\x02服务器繁忙，请稍后" +
	"再试"

	// Total table size 254 bytes (0KiB); checksum: F73E20EB
